[1] 1
[1] "ANDRUSLK"
[1] "Lead dates, run flag set to TRUE."
[1] "CAMP11LK"
[1] "CHIPPEWA"
[1] "CUB2"
[1] "DEMONTLK"
[1] "FRAINSLK"
[1] "GREENLK"
[1] "KITCHNER"
[1] "LAKE16"
[1] "LAKE27"
[1] "LOSTLAKE"
[1] "MCNRNY2A"
[1] "Lead dates, run flag set to TRUE."
[1] "MCNRNY3A"
[1] "Lead dates, run flag set to TRUE."
[1] "MCNRNY4A"
[1] "Lead dates, run flag set to TRUE."
[1] "RYERSE"
[1] "SPIRIT"
[1] "VESTABRG"
[1] "WINTERGR"
[1] "WOLVERIN"
[1] "YELLOWDG"
[1] "CANYONMI"
[1] "LTDOLLAR"
[1] "IRWINSMT"
[1] "GLIMML1"
[1] "TOWER1"
[1] "TOWER4"
[1] "TOWER6"
[1] "TOWER7"
[1] "NELSONMI"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Radiocarbon Ambrosia rise
[1] "MUDLKMI"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon
[1] "LILYMI"
[1] "ESOLDIER"
[1] "GUARD"
[1] "TROUTLBG"
[1] "COWDEN"
[1] "HICKSMI"
[1] "MORRIMI"
[1] "BUCKMI"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon Biostratigraphic, pollen
[1] "KERRMI"
[1] "CROOKEDN"
[1] "CROOKEDR"
[1] "Lead dates, run flag set to TRUE."
[1] "CROOKEDU"
[1] "Lead dates, run flag set to TRUE."
[1] "JAYLAKE"
[1] "LORRAINE"
[1] "Adjusted default! Previous default was in Radiocarbon years BP"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Radiocarbon, reservoir correction, calibrated Radiocarbon, calibrated Core top Ambrosia rise
[1] "PENEGOR"
[1] "Adjusted default! Previous default was in Radiocarbon years BP"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon, calibrated
[1] "SRHODY"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon, calibrated
[1] "MINDEN"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon, calibrated
[1] "ALLIE"
[1] "ALMORA1"
[1] "ANDERSLK"
[1] "Why can BACON only write a limited number of characters?!?!"
[1] "ANDREE"
[1] "Why can BACON only write a limited number of characters?!?!"
[1] "BADMED"
[1] "BBASS"
[1] "BECKMAN"
[1] "BECKMNBG"
[1] "BIGJOHN"
[1] "BILLYS"
[1] "BLANDIN"
[1] "BLKHOOF"
[1] "BOBLAKE"
[1] "BOGD"
[1] "BOSSUOT"
[1] "BROWNSBY"
[1] "Lead dates, run flag set to TRUE."
[1] "BURNTSDE"
[1] "CAMPBELL"
[1] "CEDARBLK"
[1] "CINDY"
[1] "MNGRCL"
[1] "CRAZY"
[1] "DALTON"
[1] "DOGFISH"
[1] "DUNNIGAN"
[1] "Lead dates, run flag set to TRUE."
[1] "EASTTWIN"
[1] "EGGERT"
[1] "FAITH"
[1] "FARQUAR"
[1] "FAWNLAKE"
[1] "FOXPOND"
[1] "FRENCH"
[1] "GEORGE"
[1] "MNBELG"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "GOLDSMTH"
[1] "GRICE"
[1] "HEMOPOND"
[1] "HORSE"
[1] "HORSHOHA"
[1] "HOSTAGE"
[1] "HUGLAKE"
[1] "HUSTLER"
[1] "Lead dates, run flag set to TRUE."
[1] "IRVIN"
[1] "JACOBSN1"
[1] "JACOBSN2"
[1] "MNSHBL"
[1] "KEGAN"
[1] "KIRCHNR1"
[1] "KIRCHNR2"
[1] "KOTIRANT"
[1] "KRYZ"
[1] "KYLENLK"
[1] "LAKEANN"
[1] "LAKEANNF"
[1] "LAKEANNH"
[1] "LAKECARL"
[1] "LEWISLK"
[1] "LILYLAKE"
[1] "LITTBASS"
[1] "LKCLDSA"
[1] "Site has manual reservoir corrections. Do not alter Bacon chron control file!"
[1] "LKCLDSH"
[1] "LKCLDSSW"
[1] "MABEL"
[1] "MARTINPD"
[1] "MCCRANEY"
[1] "MINNIEN"
[1] "MINNIEO"
[1] "MUDLKMN1"
[1] "MUDLKMN2"
[1] "MURPHY"
[1] "MYRTLE"
[1] "NELSLK"
[1] "Lead dates, run flag set to TRUE."
[1] "NELSONPD"
[1] "ONAMIA"
[1] "ONDRISPD"
[1] "PGONIABG"
[1] "POGONIA"
[1] "THIRDLK"
[1] "THRDBGN"
[1] "THRDBGW"
[1] "PENNINGT"
[1] "PETERSL"
[1] "PLEASAMN"
[1] "PORTAGE"
[1] "REICHOW"
[1] "REIDEL"
[1] "RHOLL"
[1] "RICEMNA"
[1] "RICEMNB"
[1] "ROSSBURG"
[1] "RUTZLAKE"
[1] "SEDIVY"
[1] "SHAGAWA"
[1] "SILVERMN"
[1] "SISEEBA"
[1] "SOLUM"
[1] "SOSTANCH"
[1] "SPECTACL"
[1] "STCATHER"
[1] "STONE"
[1] "STONTAM1"
[1] "STONTAM2"
[1] "SUNFISH"
[1] "TERHELL"
[1] "THOMPSON"
[1] "TOENJES"
[1] "TWINMN1"
[1] "UPGRAVEN"
[1] "WEBERLK"
[1] "WENTZEL"
[1] "WHITLIL1"
[1] "WHITLILY"
[1] "WILWRDPD"
[1] "WOLFCRK"
[1] "WOLSFELD"
[1] "Adjusted default! Previous default was in Radiocarbon years BP"
[1] "SOUHERON"
[1] "OCHEDA"
[1] "BLOMFORD"
[1] "FAWNANMN"
[1] "FROVOLD"
[1] "GOOSEMN"
[1] "OLSONMN"
[1] "RNDGROVE"
[1] "LASTLAKE"
[1] "MNLYC2"
[1] "MONSON"
[1] "DEANS"
[1] "EMILY"
[1] "PERCHMN"
[1] "CHUBLAKE"
[1] "MNDLLR"
[1] "ZIEBELL"
[1] "MNDLML"
[1] "LYBECK"
[1] "UNION"
[1] "MNFRAL"
[1] "ALBERTL3"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "EVRHRTLK"
[1] "SHARKEY"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon, calibrated
[1] "KIMBLE"
[1] "WESTOLAF"
[1] "OAKGLEN"
[1] "CAMPLAKE"
[1] "BASSK"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon, calibrated
[1] "SALLIE"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Stratigraphic Ambrosia rise
[1] "MNPPJL"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "LILY"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "KELLYDUD"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "MARTHA"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "NORPOL"
[1] "MINNREG"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "AMBER"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon, calibrated
[1] "CAMP"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon, calibrated
[1] "CRYSTAL"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "FISHL"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "FISHS"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "EAGLEL"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "EMILY_NE"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "FULLER"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon Radiocarbon
[1] "LAKEMINA"
[1] "ELKGR-89"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Biostratigraphic
[1] "Dropping biostratigraphic marker"
[1] "MNCLEB"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "MNCLEC"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "MNCLE4"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "MNCLED"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Sediment stratigraphic
[1] "MNCLEL"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Ambrosia rise Annual laminations (varves)
[1] "Why can BACON only write a limited number of characters?!?!"
[1] "MNBCSC"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "MNCLSQ"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon
[1] "MNCHLH"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "MNOTCL"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "MNCVTL"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "MNHBLS"
[1] "Why can BACON only write a limited number of characters?!?!"
[1] "MNWSSO"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise
[1] "WILLIAMJ"
[1] "MNHNLL"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon
[1] "MNHNWB"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon
[1] "DEEPLAKE"
[1] "QUALLY"
[1] "ITASCALC"
[1] "ITASCAMB"
[1] "ITASCAMC"
[1] "ITASCAMD"
[1] "ITASCAT2"
[1] "STEELMN"
[1] "FOXMN"
[1] "LITSHING"
[1] "MADELIA"
[1] "Adjusted default! Previous default was in Radiocarbon years BP"
[1] "HELLSKIT"
[1] "LAKEMARY"
[1] "BLUMOUND"
[1] "BROWNLK"
[1] "Lead dates, run flag set to TRUE."
[1] "CAMP12LK"
[1] "Lead dates, run flag set to TRUE."
[1] "DARKLAKE"
[1] "Why can BACON only write a limited number of characters?!?!"
[1] "DENTONLK"
[1] "Lead dates, run flag set to TRUE."
[1] "DEVILSWI"
[1] "Adjusted default! Previous default was in Radiocarbon years BP"
[1] "DISTER59"
[1] "DISTRHFT"
[1] "ERNSTPIT"
[1] "GASS"
[1] "HANSEN"
[1] "IOLABOG"
[1] "KELLHOL1"
[1] "KELLHOL2"
[1] "KELLNERS"
[1] "LITTLPIN"
[1] "Why can BACON only write a limited number of characters?!?!"
[1] "STWDARK2"
[1] "MENDOTAC"
[1] "MENDOTAD"
[1] "OTTOMLK"
[1] "Lead dates, run flag set to TRUE."
[1] "RADTKE"
[1] "RUBYLAKE"
[1] "SEIDEL01"
[1] "SEIDEL02"
[1] "TAMARACK"
[1] "WOODLAKE"
[1] "ADELINE"
[1] "ELEVENS"
[1] "ESKALAKE"
[1] "FALLISON"
[1] "HELLHOLE"
[1] "EMRICK"
[1] "ADVENTUR"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "BENACH"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "BLUEJ"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "BROZIE"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "CAMPTWO"
[1] "Keeping European settlement horizon"
[1] European settlement horizon
Levels: Core top European settlement horizon
[1] "FERRY01"
[1] "HEMLOCK"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon
[1] "WARNERWI"
[1] "OPINES"
[1] "LIMABOG"
[1] "CAPITOLA"
[1] "BEAVERWI"
[1] "Adjusted default! Previous default was in Radiocarbon years BP"
[1] "Keeping Ambrosia rise"
[1] Ambrosia rise
Levels: Core top Ambrosia rise Radiocarbon, reservoir correction Radiocarbon
[1] "LONESTAR"
[1] "LILY04"
NULL
debugging in: setup_bacon(my_date, version = version)
debug at R/setup_bacon.r#7: {
    library(purrr)
    library(dplyr)
    source("R/utils/helpers.r")
    source("R/utils/write_agefile_stepps.r")
    gpids <- neotoma::get_table(table.name = "GeoPoliticalUnits")
    gpid <- gpids$GeoPoliticalID[grep("Minnesota|Wisconsin|Michigan", 
        gpids$GeoPoliticalName)]
    dl <- gpid %>% map(function(x) neotoma::get_dataset(datasettype = "pollen", 
        gpid = x, ageyoung = 0)) %>% unlist(recursive = FALSE)
    ids <- as.numeric(names(dl))
    nsites <- length(ids)
    if (file.exists(paste0("data/pol_", my_date, ".rds"))) {
        pol <- readRDS(paste0("data/pol_", my_date, ".rds"))
    }
    if (!file.exists(paste0("data/pol_", my_date, ".rds")) | 
        (length(ids) != length(pol))) {
        pol <- neotoma::get_download(ids)
        saveRDS(pol, file = paste0("data/pol_", my_date, ".rds"))
    }
    pollen_meta <- data.frame(id = sapply(pol, function(x) x$dataset$dataset.meta$dataset.id), 
        handle = sapply(pol, function(x) x$dataset$dataset.meta$collection.handle), 
        lat = sapply(pol, function(x) x$dataset[[1]]$lat), long = sapply(pol, 
            function(x) x$dataset[[1]]$long))
    pollen_meta$state <- map.where(database = "state", x = pollen_meta$long, 
        y = pollen_meta$lat)
    pollen_meta <- split_mi(pollen_meta, longlat = TRUE)
    pollen_meta$state <- pollen_meta$state2
    pollen_meta$set.year <- get_survey_year(pollen_meta[, c("long", 
        "lat")], pollen_meta$state)
    write.table(pollen_meta, file = paste0("data/pollen_meta_v", 
        version, ".csv"), col.names = TRUE, row.names = FALSE, 
        sep = ",")
    site_age_data <- data.frame(handle = sapply(pol, function(x) x$dataset$dataset.meta$collection.handle), 
        name = sapply(pol, function(x) x$dataset$site.data$site.name), 
        dataset_id = sapply(pol, function(x) x$dataset$dataset.meta$dataset.id), 
        pol_age_min = sapply(pol, function(x) min(x$sample.meta$age)), 
        pol_age_max = sapply(pol, function(x) max(x$sample.meta$age)), 
        age_type = sapply(pol, function(x) x$sample.meta$age.type[1]), 
        bacon = rep(NA, nsites), gc_age_min = rep(NA, nsites), 
        gc_age_max = rep(NA, nsites), reason = rep(NA, nsites), 
        new = rep(NA, nsites), amb_rise = rep(NA))
    bacon_params <- data.frame(handle = sapply(pol, function(x) x$dataset$dataset.meta$collection.handle), 
        dataset.id = sapply(pol, function(x) x$dataset$dataset.meta$dataset.id), 
        acc.mean.mod = 3.02, acc.mean.old = 15, acc.shape.mod = 0.53, 
        acc.shape.old = 0.9, mem.strength = 4, mem.mean = 0.7, 
        hiatus = NA, thick = 5, age.type = sapply(pol, function(x) unique(x$sample.meta$age.type)), 
        run = FALSE, suit = sapply(pol, function(x) ifelse(unique(x$sample.meta$age.type) == 
            "Varve years BP", FALSE, NA)), ndates = NA, success = NA, 
        stringsAsFactors = FALSE)
    for (i in 1:nsites) {
        site.handle <- as.vector(bacon_params$handle[i])
        print(site.handle)
        site.id <- as.numeric(as.vector(bacon_params$dataset.id[i]))
        if (site.id == 1649) {
            print("Site has manual reservoir corrections. Do not alter Bacon chron control file!")
            bacon_params$suit[i] = TRUE
            next
        }
        download = pol[[i]]
        survey.year = pollen_meta$set.year[i]
        path = "."
        corename = site.handle
        site.id = site.id
        bacon_out = try(write_agefile_stepps(download = pol[[i]], 
            survey.year = pollen_meta$set.year[i], path = ".", 
            corename = site.handle, site.id = site.id))
        if (!class(bacon_out) == "try-error") {
            site_age_data$bacon[i] = bacon_out$run_flag
            site_age_data$gc_age_max[i] = bacon_out$gc_age_max
            site_age_data$gc_age_min[i] = bacon_out$gc_age_min
            site_age_data$amb_rise[i] = bacon_out$amb_rise
            bacon_params$suit[i] = bacon_out$run_flag
            bacon_params$ndates[i] = bacon_out$ndates
        }
        else {
            bacon_params$suit[i] = FALSE
        }
        if (site.id %in% c(3131, 2309, 14839, 546, 1643, 2309)) {
            bacon_params$suit[i] = FALSE
        }
    }
    bacon_params[bacon_params$suit == FALSE, c(1, 2, 11, 14)]
    bacon_params[bacon_params$suit == TRUE, c(1, 2, 11)]
    site_age_data[which(is.na(site_age_data$bacon)), ]
    site_age_data[which(site_age_data$bacon == TRUE), ]
    write.table(site_age_data, file = paste0("data/pollen_site_age_meta_v", 
        version, ".csv"), col.names = TRUE, row.names = FALSE, 
        sep = ",")
    write.table(bacon_params, file = paste0("data/bacon_params_v", 
        version, ".csv"), col.names = TRUE, row.names = FALSE, 
        sep = ",")
    return(NULL)
}
debug at R/setup_bacon.r#12: library(purrr)
debug at R/setup_bacon.r#13: library(dplyr)
debug at R/setup_bacon.r#15: source("R/utils/helpers.r")
debug at R/setup_bacon.r#16: source("R/utils/write_agefile_stepps.r")
debug at R/setup_bacon.r#18: gpids <- neotoma::get_table(table.name = "GeoPoliticalUnits")
debug at R/setup_bacon.r#20: gpid <- gpids$GeoPoliticalID[grep("Minnesota|Wisconsin|Michigan", 
    gpids$GeoPoliticalName)]
debug at R/setup_bacon.r#22: dl <- gpid %>% map(function(x) neotoma::get_dataset(datasettype = "pollen", 
    gpid = x, ageyoung = 0)) %>% unlist(recursive = FALSE)
debug at R/setup_bacon.r#26: ids <- as.numeric(names(dl))
debug at R/setup_bacon.r#28: nsites <- length(ids)
debug at R/setup_bacon.r#31: if (file.exists(paste0("data/pol_", my_date, ".rds"))) {
    pol <- readRDS(paste0("data/pol_", my_date, ".rds"))
}
debug at R/setup_bacon.r#33: pol <- readRDS(paste0("data/pol_", my_date, ".rds"))
debug at R/setup_bacon.r#36: if (!file.exists(paste0("data/pol_", my_date, ".rds")) | (length(ids) != 
    length(pol))) {
    pol <- neotoma::get_download(ids)
    saveRDS(pol, file = paste0("data/pol_", my_date, ".rds"))
}
debug at R/setup_bacon.r#44: pollen_meta <- data.frame(id = sapply(pol, function(x) x$dataset$dataset.meta$dataset.id), 
    handle = sapply(pol, function(x) x$dataset$dataset.meta$collection.handle), 
    lat = sapply(pol, function(x) x$dataset[[1]]$lat), long = sapply(pol, 
        function(x) x$dataset[[1]]$long))
debug at R/setup_bacon.r#49: pollen_meta$state <- map.where(database = "state", x = pollen_meta$long, 
    y = pollen_meta$lat)
debug at R/setup_bacon.r#51: pollen_meta <- split_mi(pollen_meta, longlat = TRUE)
[1] 1
debug at R/setup_bacon.r#52: pollen_meta$state <- pollen_meta$state2
debug at R/setup_bacon.r#53: pollen_meta$set.year <- get_survey_year(pollen_meta[, c("long", 
    "lat")], pollen_meta$state)
debug at R/setup_bacon.r#55: write.table(pollen_meta, file = paste0("data/pollen_meta_v", 
    version, ".csv"), col.names = TRUE, row.names = FALSE, sep = ",")
[1] 1
debug at #3: site.handle <- as.vector(bacon_params$handle[i])
debug at #4: print(site.handle)
[1] "ANDRUSLK"
debug at #5: site.id <- as.numeric(as.vector(bacon_params$dataset.id[i]))
debug at #8: if (site.id == 1649) {
    print("Site has manual reservoir corrections. Do not alter Bacon chron control file!")
    bacon_params$suit[i] = TRUE
    next
}
debug at #14: download = pol[[i]]
debug at #15: survey.year = pollen_meta$set.year[i]
debug at #16: path = "."
debug at #17: corename = site.handle
debug at #18: site.id = site.id
debug at #20: bacon_out = try(write_agefile_stepps(download = pol[[i]], survey.year = pollen_meta$set.year[i], 
    path = ".", corename = site.handle, site.id = site.id))
[1] "Lead dates, run flag set to TRUE."
debug at #26: if (!class(bacon_out) == "try-error") {
    site_age_data$bacon[i] = bacon_out$run_flag
    site_age_data$gc_age_max[i] = bacon_out$gc_age_max
    site_age_data$gc_age_min[i] = bacon_out$gc_age_min
    site_age_data$amb_rise[i] = bacon_out$amb_rise
    bacon_params$suit[i] = bacon_out$run_flag
    bacon_params$ndates[i] = bacon_out$ndates
} else {
    bacon_params$suit[i] = FALSE
}
debug at #27: site_age_data$bacon[i] = bacon_out$run_flag
debug at #28: site_age_data$gc_age_max[i] = bacon_out$gc_age_max
[1] "2017-01-07"
